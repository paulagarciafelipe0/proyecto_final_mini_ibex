name: Build & Deploy Lambda on Push

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-1
    outputs:
      image_uri: ${{ steps.build_push.outputs.image_uri }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        id: build_push
        run: |
          # Define la URI de la imagen
          IMAGE_URI=786055265018.dkr.ecr.eu-west-1.amazonaws.com/lambda_volatilidad:latest

          # Construye, etiqueta y sube la imagen
          docker build -t lambda_volatilidad ./lambda_volatilidad
          docker tag lambda_volatilidad:latest $IMAGE_URI
          docker push $IMAGE_URI

          # Exporta IMAGE_URI como variable de entorno para pasos posteriores
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          # Exporta IMAGE_URI como output del job para usarlo en el job de deploy
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

  deploy:
    name: Terraform Apply
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan \
            -out=tfplan \
            -var="image_uri=${{ needs.build.outputs.image_uri }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
